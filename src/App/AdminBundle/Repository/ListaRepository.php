<?php

namespace App\AdminBundle\Repository;

/**
 * ListaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ListaRepository extends \Doctrine\ORM\EntityRepository
{
	public function queryAll(array $valores = array(), $user)
	  {
	        $em = $this->getEntityManager();
	        $qb = $em->createQueryBuilder();
	        $qb->select('a');
	        $qb->from('AdminBundle:Lista', 'a');
	        $qb->where("a.Usuario = ?1");
	        $qb->setParameter(1,$user->getId());


	        if (array_key_exists("nombre", $valores))
	        {
	            $valores['nombre'] = trim($valores['nombre']);
	            if (strlen($valores['nombre'])>0)
	            {
	                $qb->Andwhere($qb->expr()->like("a.nombre", "?2"));
	                $qb->setParameter(2,"%".$valores['nombre']."%");
	            }			
	        }

	        $consulta = $qb->getQuery();
	        return $consulta;
	  }

	 

	     public function listTable($lista)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('l.id','i.nombre as ingrediente', 'o.cantidad as cantidad', 'i.unidadMedida as unidad', 'o.comprado as estado','o.id as idOrden' )
                ->from('AdminBundle:Lista', 'l')
                ->where('l.id = :id')
                ->setParameter('id',$lista->getId())
                ->innerJoin('l.ordenescompras','o')
                ->innerJoin('o.Ingrediente','i')
            ->getQuery()
            ->getResult();
    }

    public function getNumeroListasFecha()
	{
		$qp = $this->createQueryBuilder('l')->select('l.fechaCreacion','count(l.id) as frecuenciaListas')->groupBy('l.fechaCreacion')->addOrderBy('l.fechaCreacion', 'ASC');;
		
		return $qp->getQuery()->getResult();
	}

	public function getNumeroLista()
	{
		$qp = $this->createQueryBuilder('l')->select('count(l.id)');
		
		return $qp->getQuery()->getSingleScalarResult();
	}

	public function listMenuTable($lista)
    {
        return $this->getEntityManager()
            ->createQueryBuilder()
            ->select('l.id','m.id as idMenu', 'ml.numeroComensales as comensales', 'm.nombre as menu' )
                ->from('AdminBundle:Lista', 'l')
                ->where('l.id = :id')
                ->setParameter('id',$lista->getId())
                ->innerJoin('l.menus_listas','ml')
                ->innerJoin('ml.Menu','m')
            ->getQuery()
            ->getResult();
    }

}
