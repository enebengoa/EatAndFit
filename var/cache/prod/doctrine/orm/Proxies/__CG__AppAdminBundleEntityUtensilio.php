<?php

namespace Proxies\__CG__\App\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Utensilio extends \App\AdminBundle\Entity\Utensilio implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'nombre', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'descripcion', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'tecnicas', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'recetass', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'puntuaciones', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'comentarios'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'id', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'nombre', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'descripcion', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'tecnicas', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'recetass', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'puntuaciones', '' . "\0" . 'App\\AdminBundle\\Entity\\Utensilio' . "\0" . 'comentarios'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Utensilio $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', [$nombre]);

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', []);

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescripcion($descripcion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescripcion', [$descripcion]);

        return parent::setDescripcion($descripcion);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescripcion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescripcion', []);

        return parent::getDescripcion();
    }

    /**
     * {@inheritDoc}
     */
    public function addTecnica(\App\AdminBundle\Entity\Tecnica $tecnica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTecnica', [$tecnica]);

        return parent::addTecnica($tecnica);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTecnica(\App\AdminBundle\Entity\Tecnica $tecnica)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTecnica', [$tecnica]);

        return parent::removeTecnica($tecnica);
    }

    /**
     * {@inheritDoc}
     */
    public function getTecnicas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTecnicas', []);

        return parent::getTecnicas();
    }

    /**
     * {@inheritDoc}
     */
    public function addRecetass(\App\AdminBundle\Entity\Receta $recetass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRecetass', [$recetass]);

        return parent::addRecetass($recetass);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRecetass(\App\AdminBundle\Entity\Receta $recetass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRecetass', [$recetass]);

        return parent::removeRecetass($recetass);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecetass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecetass', []);

        return parent::getRecetass();
    }

    /**
     * {@inheritDoc}
     */
    public function addPuntuacione(\App\AdminBundle\Entity\Puntuacion $puntuacione)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPuntuacione', [$puntuacione]);

        return parent::addPuntuacione($puntuacione);
    }

    /**
     * {@inheritDoc}
     */
    public function removePuntuacione(\App\AdminBundle\Entity\Puntuacion $puntuacione)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePuntuacione', [$puntuacione]);

        return parent::removePuntuacione($puntuacione);
    }

    /**
     * {@inheritDoc}
     */
    public function getPuntuaciones()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPuntuaciones', []);

        return parent::getPuntuaciones();
    }

    /**
     * {@inheritDoc}
     */
    public function addComentario(\App\AdminBundle\Entity\Comentario $comentario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComentario', [$comentario]);

        return parent::addComentario($comentario);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComentario(\App\AdminBundle\Entity\Comentario $comentario)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComentario', [$comentario]);

        return parent::removeComentario($comentario);
    }

    /**
     * {@inheritDoc}
     */
    public function getComentarios()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComentarios', []);

        return parent::getComentarios();
    }

}
